var myApp=myApp||{};d3.timeFormatDefaultLocale({decimal:",",thousands:" ",grouping:[3],currency:["€",""],dateTime:"%a %b %e %X %Y",date:"%d/%m/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Dimanche","Lundi","Mardi","Mercredi","Jeudi","Vendredi","Samedi"],shortDays:["Dim","Lun","Mar","Mer","Jeu","Ven","Sam"],months:["janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],shortMonths:["janv.","févr.","mars","avril","mai","juin","juil.","août","sept.","oct.","nov.","dec."]});const options={sizes:{width:530,height:315,wPad:36,hPad:48},axes:{temperature:{label:"Température",unit:"°C",colour:"red",fillColour:"red",line:{active:!0}},pressure:{label:"Pression",unit:"hPa",colour:"green",fillColour:"green",line:{active:!0}},light:{label:"Luminosité",unit:"",colour:"orange",fillColour:"orange",line:{active:!0}},water:{label:"Niveau d'eau",unit:"cm",colour:"steelblue",fillColour:"lightblue",line:{active:!0}}},labelNames:["timeLabel","temperatureLabel","pressureLabel","lightLabel","waterLabel"]};myApp.getData=(filename=>new Promise(function(resolve,reject){d3.json(filename).then(data=>{const parseTime=d3.timeParse("%s");data.forEach(d=>{d.timestamp=parseTime(d.timestamp),d.temperature=+d.temperature,d.pressure=+d.pressure,d.light=+d.light,d.waterLevel=+d.waterLevel}),resolve(data)})})),myApp.drawChart=((data,id)=>{const fullChart=d3.select(`#${id}`).append("svg").attr("width",options.sizes.width+2*options.sizes.wPad).attr("height",options.sizes.height+2*options.sizes.hPad).append("g").attr("transform",`translate(${options.sizes.wPad},5)`),timeAxis=d3.scaleTime().domain(d3.extent(data,d=>d.timestamp)).range([0,options.sizes.width]),temperatureAxis=d3.scaleLinear().domain([0,d3.max(data,d=>Math.max(d.temperature))]).range([options.sizes.height,0]),pressureAxis=d3.scaleLinear().domain(d3.extent(data,d=>d.pressure)).range([options.sizes.height,0]),lightAxis=d3.scaleLinear().domain([0,d3.max(data,d=>Math.max(d.light))]).range([options.sizes.height,0]),waterLevelAxis=d3.scaleLinear().domain([0,400]).range([options.sizes.height,0]);fullChart.append("path").data([data]).attr("class","water line").style("fill",options.axes.water.fillColour).style("stroke",options.axes.water.colour).attr("d",d3.area().curve(d3.curveStepAfter).defined(d=>d.waterLevel).x(d=>timeAxis(d.timestamp)).y0(options.sizes.height).y1(d=>waterLevelAxis(d.waterLevel))),fullChart.append("path").data([data]).style("stroke",options.axes.temperature.colour).attr("class","temperature line").attr("d",d3.line().curve(d3.curveMonotoneX).defined(d=>d.temperature).x(d=>timeAxis(d.timestamp)).y(d=>temperatureAxis(d.temperature))),fullChart.append("path").data([data]).style("stroke",options.axes.pressure.colour).attr("class","pressure line").attr("d",d3.line().curve(d3.curveMonotoneX).defined(d=>d.pressure).x(d=>timeAxis(d.timestamp)).y(d=>pressureAxis(d.pressure))),fullChart.append("path").data([data]).style("stroke",options.axes.light.colour).attr("class","light line").attr("d",d3.line().curve(d3.curveMonotoneX).defined(d=>d.light).x(d=>timeAxis(d.timestamp)).y(d=>lightAxis(d.light))),fullChart.append("g").attr("transform",`translate(0,${options.sizes.height})`).call(d3.axisBottom(timeAxis)),fullChart.append("g").attr("class","temperature axisRed").call(d3.axisLeft(temperatureAxis)),fullChart.append("g").attr("class","pressure axisGreen").call(d3.axisRight(pressureAxis)),fullChart.append("g").attr("class","water axisSteelBlue").attr("transform",`translate(${options.sizes.width}, 0 )`).call(d3.axisLeft(waterLevelAxis)),fullChart.append("g").attr("class","light axisOrange").attr("transform",`translate(${options.sizes.width}, 0 )`).call(d3.axisRight(lightAxis));var optionsList=d3.entries(options.axes);const legendRectSize=18,legendSpacing=4;let legend=fullChart.selectAll(".legend").data(optionsList).enter().append("g").on("click",d=>{d.value.line.active=!d.value.line.active,d3.selectAll(`.${d.key}`).style("opacity",d.value.line.active?1:.1)}).attr("class","legend").attr("transform",(d,i)=>`translate(${120*i},${options.sizes.height+30})`);legend.append("rect").attr("class",d=>d.key).attr("width",18).attr("height",18).style("fill",d=>d.value.fillColour).style("stroke",d=>d.value.colour),legend.append("text").attr("class",d=>d.key).attr("x",22).attr("y",14).text(d=>`${d.value.label}${d.value.unit?` (${d.value.unit})`:""}`);let tooltip=fullChart.append("g").style("display","none");tooltip.append("rect").attr("rx",6).attr("ry",6).attr("id","rectangleTooltip").style("fill","#0D47A1").style("opacity",.9),tooltip.append("line").attr("id","verticalTooltipLine").style("stroke","blue").style("stroke-dasharray","3,3").style("opacity",.5).attr("y1",0).attr("y2",options.sizes.height);let toolTipLabels=tooltip.append("g").attr("id","tooltipText");function mousemove(){const mouseX=d3.touches(this)[0]?d3.touches(this)[0][0]:d3.mouse(this)[0],mouseY=d3.touches(this)[0]?d3.touches(this)[0][1]:d3.mouse(this)[1],date=timeAxis.invert(mouseX),formatTime=d3.timeFormat("%A %e %B, %H:%M"),bisectDate=d3.bisector(d=>d.timestamp).left,index=bisectDate(data,date),temperature=data[index].temperature,pressure=data[index].pressure,light=data[index].light,water=index-1<0?null:data[index-1].waterLevel;tooltip.select("#verticalTooltipLine").attr("transform",`translate(${mouseX},0)`),toolTipLabels.attr("transform",`translate(${mouseX+30},${mouseY})`),toolTipLabels.select(`#${options.labelNames[0]}`).attr("transform","translate(0,-8)").text(formatTime(date));let i=0;temperature&&++i,toolTipLabels.select(`#${options.labelNames[1]}`).style("display",temperature?null:"none").attr("transform",`translate(0,${16*i})`).text(`Température : ${temperature}°C`),pressure&&++i,toolTipLabels.select(`#${options.labelNames[2]}`).style("display",pressure?null:"none").attr("transform",`translate(0,${16*i})`).text(`Pression : ${pressure}hPa`),light&&++i,toolTipLabels.select(`#${options.labelNames[3]}`).style("display",light?null:"none").attr("transform",`translate(0,${16*i})`).text(`Luminosité : ${light}`),water&&++i,toolTipLabels.select(`#${options.labelNames[4]}`).style("display",water?null:"none").attr("transform",`translate(0,${16*i})`).text(`Niveau d'eau : ${water}cm`);const labelsBBox=toolTipLabels.node().getBBox(),tooltipBox={x:mouseX+15,y:mouseY-34,width:labelsBBox.width+30,height:labelsBBox.height+30};let boxMoved=!1;tooltipBox.x+tooltipBox.width>options.sizes.width&&(tooltipBox.x-=tooltipBox.width+30,boxMoved=!0),tooltipBox.y+tooltipBox.height>options.sizes.height?(tooltipBox.y+=options.sizes.height-tooltipBox.y-tooltipBox.height,boxMoved=!0):tooltipBox.y<0&&(tooltipBox.y=0,boxMoved=!0),boxMoved&&toolTipLabels.attr("transform",`translate(${tooltipBox.x+15},${tooltipBox.y+34})`),tooltip.select("#rectangleTooltip").attr("transform",`translate(${tooltipBox.x},${tooltipBox.y})`).attr("width",tooltipBox.width).attr("height",tooltipBox.height)}toolTipLabels.selectAll("text").data(options.labelNames).enter().append("text").style("fill","white").attr("id",data=>data),fullChart.append("rect").attr("width",options.sizes.width).attr("height",options.sizes.height).style("fill","none").style("pointer-events","all").on("mouseover",()=>tooltip.style("display",null)).on("mouseout",()=>tooltip.style("display","none")).on("mousemove",mousemove).on("touchmove",mousemove)}),myApp.getLastValue=((data,key)=>{let i=data.length-1,returnValue=data[i][key];for(;!returnValue&&i>=0;)returnValue=data[--i][key];return returnValue||-1}),myApp.setGauge=((value,id)=>{let liquidFillGaugeConfig=liquidFillGaugeDefaultSettings();liquidFillGaugeConfig.minValue=0,liquidFillGaugeConfig.maxValue=400,liquidFillGaugeConfig.displayPercent=!1,liquidFillGaugeConfig.waveAnimateTime=1e4,loadLiquidFillGauge(id,value,liquidFillGaugeConfig)});